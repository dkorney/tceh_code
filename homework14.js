// Написать функцию для определения НОК (наименьшее общее кратное) для двух чиселfunction lcm(num1, num2) {    var mltp = 1;    while (mltp % num1 != 0 | mltp % num2 != 0) {            mltp += 1;        }    return mltp;}// Написать функцию, которая принимает список, и возвращает словарь в формате:// "тип данных: количество объектов" count_types([1, 4, 'd']) -> {<class 'int'>: 2, <class 'str'>: 1}var myArray = [1, 'sds', 3, 4, 'qwe'];function countTypes(array) {    var objTypes = {};    for (var i in array) {        var key = typeof(array[i]);        if (!(typeof(array[i]) in objTypes)) {            objTypes[key] = 1;        }        else (objTypes[key] += 1);    }    return objTypes;}// Написать функцию, которая принимает два словаря,// сравнивает их ключи, выдает в консоль сколько у них общих ключейvar A = {1: 'asd', 2: 'sdf', 3: 'Столица'};var B = {1: 'sdf', 2: 'qwe', 3: 3};function countKeys(obj1, obj2) {    var keys1 = Object.keys(obj1);    var keys2 = Object.keys(obj2);    var count = 0;    for (var i in keys1) {        for (var j in keys2) {            if (keys1[i] === keys2[j]) {                count +=1;            }        }    }    return count;}// Написать функцию, которая принимает любое количество аргументов,// и возвращает список типов, принятых аргументов// find_types(1, 's', []) -> [<class 'int'>, <class 'str'>, <class 'list'>]function getTypes() {    var objectsTypes = [];    for (var i in arguments) {        objectsTypes[i] = typeof(arguments[i]);    }    return objectsTypes;}// Написать функцию, которая принимает на вход список списков (матрицу)// и выводит ее в виде матрицы (один ряд на одной строке) в консольmyMatrix = [[1, 2, 3, 4], ['a', 'b', 'c', 'd'], [66, 77, 88, 99]];function printMatrix(matrix) {    for (var row in matrix) {        console.log(matrix[row].join(' '));        }}// Написать функцию, которая принимает любое количество аргументов - списков,// она должна возвращать список из всех объектов списков,// но каждый объект должен быть уникальным// join_lists([1, 2], ['a', 2], ['c', 1]) -> [1, 2, 'a', 'c']function intersecArrays() {    var commonArray = [];    var newArray = [];    var k = 0;    for (var i in arguments) {        for (var j in arguments[i]) {                if (!(arguments[i][j] === commonArray[k])) {                    commonArray.push(arguments[i][j]);                }            }        }    commonArray.forEach(function (item) {        if (!(~newArray.indexOf(item))) {            newArray.push(item);        }    });    return newArray;}